{"ast":null,"code":"var _jsxFileName = \"/home/manu/Documents/heartyAi/frontend/src/components/LoginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [errorMessage, setErrorMessage] = useState(\"\"); // State to hold error message\n  const navigate = useNavigate();\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevData => ({\n      ...prevData,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\"http://localhost:3000/login\", formData, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        withCredentials: true\n      });\n      console.log(\"Login successful:\", response.data);\n\n      // Redirect based on the user's role\n      if (response.data.role === \"doctor\") {\n        navigate(\"/prediction\");\n      } else if (response.data.role === \"patient\") {\n        navigate(\"/chatbot\");\n      } else {\n        console.error(\"Unknown role:\", response.data.role);\n      }\n    } catch (error) {\n      if (error.response) {\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        console.error(\"Server Error:\", error.response.status);\n        setErrorMessage(\"Server Error: \" + error.response.status);\n      } else if (error.request) {\n        // The request was made but no response was received\n        console.error(\"Network Error:\", error.request);\n        setErrorMessage(\"Network Error: Unable to connect to the server.\");\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        console.error(\"Error:\", error.message);\n        setErrorMessage(\"An unexpected error occurred. Please try again.\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        value: formData.email,\n        onChange: handleChange,\n        placeholder: \"Email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        value: formData.password,\n        onChange: handleChange,\n        placeholder: \"Password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"47f7/iYE654q4pZep5QaSBhNVNs=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","LoginForm","_s","formData","setFormData","email","password","errorMessage","setErrorMessage","navigate","handleChange","e","name","value","target","prevData","handleSubmit","preventDefault","response","post","headers","withCredentials","console","log","data","role","error","status","request","message","children","onSubmit","type","onChange","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/manu/Documents/heartyAi/frontend/src/components/LoginForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst LoginForm = () => {\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const [errorMessage, setErrorMessage] = useState(\"\"); // State to hold error message\n  const navigate = useNavigate();\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prevData) => ({\n      ...prevData,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\n        \"http://localhost:3000/login\",\n        formData,\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          withCredentials: true,\n        }\n      );\n      console.log(\"Login successful:\", response.data);\n\n      // Redirect based on the user's role\n      if (response.data.role === \"doctor\") {\n        navigate(\"/prediction\");\n      } else if (response.data.role === \"patient\") {\n        navigate(\"/chatbot\");\n      } else {\n        console.error(\"Unknown role:\", response.data.role);\n      }\n    } catch (error) {\n      if (error.response) {\n        // The request was made and the server responded with a status code\n        // that falls out of the range of 2xx\n        console.error(\"Server Error:\", error.response.status);\n        setErrorMessage(\"Server Error: \" + error.response.status);\n      } else if (error.request) {\n        // The request was made but no response was received\n        console.error(\"Network Error:\", error.request);\n        setErrorMessage(\"Network Error: Unable to connect to the server.\");\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        console.error(\"Error:\", error.message);\n        setErrorMessage(\"An unexpected error occurred. Please try again.\");\n      }\n    }\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"email\"\n          name=\"email\"\n          value={formData.email}\n          onChange={handleChange}\n          placeholder=\"Email\"\n          required\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          value={formData.password}\n          onChange={handleChange}\n          placeholder=\"Password\"\n          required\n        />\n        <button type=\"submit\">Login</button>\n      </form>\n      {errorMessage && <p>{errorMessage}</p>}\n    </div>\n  );\n};\n\nexport default LoginForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}