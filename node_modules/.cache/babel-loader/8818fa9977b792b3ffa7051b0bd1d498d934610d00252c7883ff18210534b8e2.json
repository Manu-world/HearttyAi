{"ast":null,"code":"var _jsxFileName = \"/home/manu/Documents/heartyAi/frontend/src/routes/ProtectedRoute.jsx\",\n  _s = $RefreshSig$();\n// ProtectedRoute.js\nimport React from \"react\";\nimport { Route, Navigate } from \"react-router-dom\";\nimport { useAuth } from \"../provider/useAuth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  role,\n  children,\n  ...rest\n}) => {\n  _s();\n  const {\n    userRole\n  } = useAuth();\n  console.log(userRole);\n  console.log(role);\n  // Check if the user has a role and it matches the expected role\n  if (userRole && userRole === role) {\n    return /*#__PURE__*/_jsxDEV(Route, {\n      ...rest,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Redirect to /unauthorized if the user does not have the correct role\n  return /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/unauthorized\",\n    replace: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 10\n  }, this);\n};\n_s(ProtectedRoute, \"NoKEnlbC1ifxJWqxU9WvzCY+PZo=\", false, function () {\n  return [useAuth];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Route","Navigate","useAuth","jsxDEV","_jsxDEV","ProtectedRoute","role","children","rest","_s","userRole","console","log","fileName","_jsxFileName","lineNumber","columnNumber","to","replace","_c","$RefreshReg$"],"sources":["/home/manu/Documents/heartyAi/frontend/src/routes/ProtectedRoute.jsx"],"sourcesContent":["// ProtectedRoute.js\nimport React from \"react\";\nimport { Route, Navigate } from \"react-router-dom\";\nimport { useAuth } from \"../provider/useAuth\";\n\nconst ProtectedRoute = ({ role, children, ...rest }) => {\n  const { userRole } = useAuth();\n\n  console.log(userRole);\n  console.log(role);\n  // Check if the user has a role and it matches the expected role\n  if (userRole && userRole === role) {\n    return <Route {...rest}>{children}</Route>;\n  }\n\n  // Redirect to /unauthorized if the user does not have the correct role\n  return <Navigate to=\"/unauthorized\" replace />;\n};\n\nexport default ProtectedRoute;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,KAAK,EAAEC,QAAQ,QAAQ,kBAAkB;AAClD,SAASC,OAAO,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,cAAc,GAAGA,CAAC;EAAEC,IAAI;EAAEC,QAAQ;EAAE,GAAGC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACtD,MAAM;IAAEC;EAAS,CAAC,GAAGR,OAAO,CAAC,CAAC;EAE9BS,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;EACrBC,OAAO,CAACC,GAAG,CAACN,IAAI,CAAC;EACjB;EACA,IAAII,QAAQ,IAAIA,QAAQ,KAAKJ,IAAI,EAAE;IACjC,oBAAOF,OAAA,CAACJ,KAAK;MAAA,GAAKQ,IAAI;MAAAD,QAAA,EAAGA;IAAQ;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAC5C;;EAEA;EACA,oBAAOZ,OAAA,CAACH,QAAQ;IAACgB,EAAE,EAAC,eAAe;IAACC,OAAO;EAAA;IAAAL,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAChD,CAAC;AAACP,EAAA,CAZIJ,cAAc;EAAA,QACGH,OAAO;AAAA;AAAAiB,EAAA,GADxBd,cAAc;AAcpB,eAAeA,cAAc;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}