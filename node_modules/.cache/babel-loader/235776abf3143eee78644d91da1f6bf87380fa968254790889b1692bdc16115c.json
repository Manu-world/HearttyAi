{"ast":null,"code":"var _jsxFileName = \"/home/manu/Documents/heartyAi/frontend/src/components/PatientsPage.jsx\",\n  _s = $RefreshSig$();\n// patientspage.js\n\nimport React, { useState, useEffect } from \"react\";\nimport { useAuth } from \"../provider/useAuth\"; // Adjust the import path accordingly\nimport axios from \"axios\";\nimport Modal from \"./Modal\"; // Assuming you have a Modal component for displaying the report\nimport \"./PatientsPage.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction PatientsPage() {\n  _s();\n  const {\n    userEmail\n  } = useAuth();\n  const [latestResult, setLatestResult] = useState(null);\n  const [showDetails, setShowDetails] = useState(false);\n  useEffect(() => {\n    const fetchLatestResult = async () => {\n      try {\n        const response = await axios.get(`http://localhost:3000/result/${userEmail}`);\n        setLatestResult(response.data);\n      } catch (error) {\n        console.error(\"Failed to fetch latest result:\", error);\n      }\n    };\n    fetchLatestResult();\n  }, [userEmail]);\n  const toggleDetails = () => {\n    setShowDetails(!showDetails);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Welcome, Patient!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Email: \", userEmail]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), latestResult && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            border: `2px solid ${latestResult.Prediction === 1 ? \"red\" : \"green\"}`\n          },\n          children: [\"Status: \", latestResult.Status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleDetails,\n        children: \"Check Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), showDetails && /*#__PURE__*/_jsxDEV(Modal, {\n        onClose: toggleDetails,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Your Vitals\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Age in years: \", latestResult[\"Age in years\"]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Sex (0: female, 1: male):\", \" \", latestResult[\"Sex (0: female, 1: male)\"] === 1 ? \"Male\" : \"Female\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Chest pain type (0-3): \", latestResult[\"Chest pain type (0-3)\"]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Resting blood pressure (mm Hg):\", \" \", latestResult[\"Resting blood pressure (mm Hg)\"]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Serum cholesterol (mg/dl):\", \" \", latestResult[\"Serum cholesterol (mg/dl)\"]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Fasting blood sugar `\", \">\", \"` 120 mg/dl (1: true, 0: false):\", \" \", latestResult[\"Fasting blood sugar > 120 mg/dl (1: true, 0: false)\"] === 1 ? \"True\" : \"False\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Resting electrocardiographic results (0-2):\", \" \", latestResult[\"Resting electrocardiographic results (0-2)\"]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Maximum heart rate achieved:\", \" \", latestResult[\"Maximum heart rate achieved\"]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Exercise induced angina (1: yes, 0: no):\", \" \", latestResult[\"Exercise induced angina (1: yes, 0: no)\"] === 1 ? \"Yes\" : \"No\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"ST depression induced by exercise relative to rest:\", \" \", latestResult[\"ST depression induced by exercise relative to rest\"]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Slope of the peak exercise ST segment:\", \" \", latestResult[\"Slope of the peak exercise ST segment\"]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Number of major vessels (0-3) colored by fluoroscopy:\", \" \", latestResult[\"Number of major vessels (0-3) colored by fluoroscopy\"]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Thalassemia type (0-3):\", \" \", latestResult[\"Thalassemia type (0-3)\"]]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", latestResult.Status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(PatientsPage, \"qiJHjFwvoeH1Ev6SjMNLuFvFeO8=\", false, function () {\n  return [useAuth];\n});\n_c = PatientsPage;\nexport default PatientsPage;\nvar _c;\n$RefreshReg$(_c, \"PatientsPage\");","map":{"version":3,"names":["React","useState","useEffect","useAuth","axios","Modal","jsxDEV","_jsxDEV","Fragment","_Fragment","PatientsPage","_s","userEmail","latestResult","setLatestResult","showDetails","setShowDetails","fetchLatestResult","response","get","data","error","console","toggleDetails","children","fileName","_jsxFileName","lineNumber","columnNumber","style","border","Prediction","Status","onClick","onClose","_c","$RefreshReg$"],"sources":["/home/manu/Documents/heartyAi/frontend/src/components/PatientsPage.jsx"],"sourcesContent":["// patientspage.js\n\nimport React, { useState, useEffect } from \"react\";\nimport { useAuth } from \"../provider/useAuth\"; // Adjust the import path accordingly\nimport axios from \"axios\";\nimport Modal from \"./Modal\"; // Assuming you have a Modal component for displaying the report\nimport \"./PatientsPage.css\";\n\nfunction PatientsPage() {\n  const { userEmail } = useAuth();\n  const [latestResult, setLatestResult] = useState(null);\n  const [showDetails, setShowDetails] = useState(false);\n\n  useEffect(() => {\n    const fetchLatestResult = async () => {\n      try {\n        const response = await axios.get(\n          `http://localhost:3000/result/${userEmail}`\n        );\n        setLatestResult(response.data);\n      } catch (error) {\n        console.error(\"Failed to fetch latest result:\", error);\n      }\n    };\n\n    fetchLatestResult();\n  }, [userEmail]);\n\n  const toggleDetails = () => {\n    setShowDetails(!showDetails);\n  };\n\n  return (\n    <div>\n      <h1>Welcome, Patient!</h1>\n      <p>Email: {userEmail}</p>\n      {latestResult && (\n        <>\n          <div>\n            <p\n              style={{\n                border: `2px solid ${\n                  latestResult.Prediction === 1 ? \"red\" : \"green\"\n                }`,\n              }}\n            >\n              Status: {latestResult.Status}\n            </p>\n          </div>\n          <button onClick={toggleDetails}>Check Details</button>\n          {showDetails && (\n            <Modal onClose={toggleDetails}>\n              <h2>Your Vitals</h2>\n              <div>\n                <p>Age in years: {latestResult[\"Age in years\"]}</p>\n                <p>\n                  Sex (0: female, 1: male):{\" \"}\n                  {latestResult[\"Sex (0: female, 1: male)\"] === 1\n                    ? \"Male\"\n                    : \"Female\"}\n                </p>\n                <p>\n                  Chest pain type (0-3): {latestResult[\"Chest pain type (0-3)\"]}\n                </p>\n                <p>\n                  Resting blood pressure (mm Hg):{\" \"}\n                  {latestResult[\"Resting blood pressure (mm Hg)\"]}\n                </p>\n                <p>\n                  Serum cholesterol (mg/dl):{\" \"}\n                  {latestResult[\"Serum cholesterol (mg/dl)\"]}\n                </p>\n                <p>\n                  Fasting blood sugar `{\">\"}` 120 mg/dl (1: true, 0: false):{\" \"}\n                  {latestResult[\n                    \"Fasting blood sugar > 120 mg/dl (1: true, 0: false)\"\n                  ] === 1\n                    ? \"True\"\n                    : \"False\"}\n                </p>\n                <p>\n                  Resting electrocardiographic results (0-2):{\" \"}\n                  {latestResult[\"Resting electrocardiographic results (0-2)\"]}\n                </p>\n                <p>\n                  Maximum heart rate achieved:{\" \"}\n                  {latestResult[\"Maximum heart rate achieved\"]}\n                </p>\n                <p>\n                  Exercise induced angina (1: yes, 0: no):{\" \"}\n                  {latestResult[\"Exercise induced angina (1: yes, 0: no)\"] === 1\n                    ? \"Yes\"\n                    : \"No\"}\n                </p>\n                <p>\n                  ST depression induced by exercise relative to rest:{\" \"}\n                  {\n                    latestResult[\n                      \"ST depression induced by exercise relative to rest\"\n                    ]\n                  }\n                </p>\n                <p>\n                  Slope of the peak exercise ST segment:{\" \"}\n                  {latestResult[\"Slope of the peak exercise ST segment\"]}\n                </p>\n                <p>\n                  Number of major vessels (0-3) colored by fluoroscopy:{\" \"}\n                  {\n                    latestResult[\n                      \"Number of major vessels (0-3) colored by fluoroscopy\"\n                    ]\n                  }\n                </p>\n                <p>\n                  Thalassemia type (0-3):{\" \"}\n                  {latestResult[\"Thalassemia type (0-3)\"]}\n                </p>\n              </div>\n              <h2>Results</h2>\n              <p>Status: {latestResult.Status}</p>\n            </Modal>\n          )}\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default PatientsPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}